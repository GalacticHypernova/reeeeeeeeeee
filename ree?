--Test
--Another test
getgenv().settings={
   ["click"]=false,
   ["upgrade"]=false,
   ["case"]=false,
   ["stock"]=false
}
local args={
            [1]="22klikes!",
            [2]="17klikes!",
            [3]="blackiron",
            [4]="12klikes",
            [5]="500",
            [6]="8mvisits",
        }
local selectedBoss
function codes()
    spawn(function()
        for argx=1,#args do
            local args = {
                [1] = "Code",
                [2] = args[argx]
            }
            game:GetService("ReplicatedStorage").Events.StoreActions:InvokeServer(unpack(args))
        end
    end)
end


function buyCase(caseType)
    spawn(function()
        while task.wait() do
            if not getgenv().settings["case"] then break end
            local args = {
                [1] = caseType
            }           
            game:GetService("ReplicatedStorage").Events.OpenCase:InvokeServer(unpack(args))  
        end
   end)
end
function click()
   spawn(function()
       while getgenv().settings["click"] and task.wait() do
            game:GetService("ReplicatedStorage").Events.ClientClick:FireServer()
       end
   end)
end

function upgradeAll()
   spawn(function()
       while task.wait() do
           if not getgenv().settings["upgrade"] then break end
        local args = {
            [1] = "Upgrade",
            [2] = "CaseTime"
        }
        game:GetService("ReplicatedStorage").Events.StoreActions:InvokeServer(unpack(args))
        end
   end)
   spawn(function()
       while task.wait() do
           if not getgenv().settings["upgrade"] then break end
            local args = {
                [1] = "Upgrade",
                [2] = "CaseTime"
            }
            game:GetService("ReplicatedStorage").Events.StoreActions:InvokeServer(unpack(args))
       end
   end)
end
local savedValue
local savedStockAmount
function stock(stockAmount)
    task.spawn(function()
        while getgenv().settings["stock"] and task.wait() do
            local args = {
                [1] = "Stock",
                [2] = "Buy",
                [3] = stockAmount
            }
            savedStockAmount=stockAmount
            game:GetService("ReplicatedStorage").Events.GamesActions:InvokeServer(unpack(args))
        end
    end)
end
function stockSell()
    task.spawn(function()
        local args = {
            [1] = "Stock",
            [2] = "Sell",
            [3] = savedStockAmount
        }
        game:GetService("ReplicatedStorage").Events.GamesActions:InvokeServer(unpack(args))
    end)
end
local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Wait = library.subs.Wait -- Only returns if the GUI has not been terminated. For 'while Wait() do' loops

local PepsisWorld = library:CreateWindow({
Name = "Pepsi's World",
Themeable = {
Info = "Discord Server: VzYTJ7Y"
}
})

local GeneralTab = PepsisWorld:CreateTab({
Name = "General"
})
local FarmingSection = GeneralTab:CreateSection({
Name = "Autofarm"
})
local PetSection = GeneralTab:CreateSection({
Name = "Pets"
})
local Other = GeneralTab:CreateSection({
  Name = "Misc",
  Side="Right"
})
FarmingSection:AddToggle({
Name = "Auto Click",
Callback=function(bool) getgenv().settings["click"]=bool
  if bool then
      click()
  end
end,
Keybind =  {
Mode=   "Dynamic"
}
})
FarmingSection:AddToggle({
    Name="Auto Upgrade everything",
    Callback=function(bool)
        getgenv().settings["upgrade"]=bool
        if bool then
            upgradeAll()
        end
    end
    
})
local selectedStock
FarmingSection:AddTextbox({
    Name="Stock amount to buy (1-50)",
    Callback=function(value)
        selectedStock=value
        print(value)
    end
})
FarmingSection:AddToggle({
    Name="Auto stock (will buy and sell selected)",
    Callback=function(bool)
        getgenv().settings["stock"]=bool
        if bool then
            while game:GetService("ReplicatedStorage").GameCountdowns.Stock<=45 do
            stock()
            end
            while game:GetService("ReplicatedStorage").GameCountdowns.Stock>=50 do
                task.wait()
            end
            stockSell()
        end
    end
})
local selectedEgg
PetSection:AddDropdown({
   Name="Case to buy",
   List={"Click Me","Starter","Noobie","Stepping","Learning","Funding","Business","Legendary","Marcellus","Famous","Mythic","Eirene","Aeschylus","Olysseus"},
   Callback=function(value)
       selectedEgg=value
       print(value)
       end
})
Other:AddButton({
    Name="Claim all codes",
    Callback=function()
        codes()
    end
})
Other:AddSlider({
    Name="Walkspeed",
    Value=16,
    Min=16,
    Max=1000,
    Callback=function(value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed=value
    end
})
Other:AddSlider({
    Name="Jump power",
    Value=50,
    Min=50,
    Max=1000,
    Callback=function(value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower=value
    end
})
