--Test
--Another test
getgenv().settings={
   ["click"]=false,
   ["upgrade"]=false,
   ["case"]=false
}
local rS=game:GetService("RunService")
local selectedBoss
function codes()
    spawn(function()
        local args={
            [1]="SuperYen",
            [2]="TitanicLikeGoal",
            [3]="FeelingLucky",
            [4]="ClickingPower",
            [5]="LikeYenBoost",
            [6]="ClickBoost",
            [7]="SpradenCapped",
            [8]="SuperClicks",
            [9]="GiftOfGiving",
            [10]="MonsterYen",
            [11]="Release"
        }
        game:GetService("ReplicatedStorage").Remotes.RedeemCode:InvokeServer(unpack(args))
    end)
end


function buyCase(caseType)
    spawn(function()
        while task.wait() do
            if not getgenv().settings["case"] then break end
            local args = {
                [1] = caseType
            }           
            game:GetService("ReplicatedStorage").Events.OpenCase:InvokeServer(unpack(args))  
        end
   end)
end
function click()
   spawn(function()
       while getgenv().settings["click"] do
        rS.RenderStepped:Connect(function()
            game:GetService("ReplicatedStorage").Events.ClientClick:FireServer()
            end)
       end
   end)
end

function upgradeAll()
   spawn(function()
       while task.wait() do
           if not getgenv().settings["upgrade"] then break end
        local args = {
            [1] = "Upgrade",
            [2] = "CaseTime"
        }
        game:GetService("ReplicatedStorage").Events.StoreActions:InvokeServer(unpack(args))
        end
   end)
   spawn(function()
       while task.wait() do
           if not getgenv().settings["upgrade"] then break end
            local args = {
                [1] = "Upgrade",
                [2] = "CaseTime"
            }
            game:GetService("ReplicatedStorage").Events.StoreActions:InvokeServer(unpack(args))
       end
   end)
end
local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Wait = library.subs.Wait -- Only returns if the GUI has not been terminated. For 'while Wait() do' loops

local PepsisWorld = library:CreateWindow({
Name = "Pepsi's World",
Themeable = {
Info = "Discord Server: VzYTJ7Y"
}
})

local GeneralTab = PepsisWorld:CreateTab({
Name = "General"
})
local FarmingSection = GeneralTab:CreateSection({
Name = "Autofarm"
})
local PetSection = GeneralTab:CreateSection({
Name = "Pets"
})
local Other = GeneralTab:CreateSection({
  Name = "Misc",
  Side="Right"
})
FarmingSection:AddToggle({
Name = "Auto Click",
Callback=function(bool) getgenv().settings["click"]=bool
  if bool then
      click()
  end
end,
Keybind =  {
Mode=   "Dynamic"
}
})
FarmingSection:AddToggle({
    Name="Auto Upgrade everything",
    Callback=function(bool)
        getgenv().settings["upgrade"]=bool
        if bool then
            upgradeAll()
        end
    end
    
})
local selectedEgg
PetSection:AddDropdown({
   Name="Case to buy",
   List={"Click Me","Starter","Noobie","Stepping","Learning","Funding","Business","Legendary","Marcellus","Famous","Mythic","Eirene","Aeschylus","Olysseus"},
   Callback=function(value)
       selectedEgg=value
       print(value)
       end
})
PetSection:AddToggle({
   Name="Buy egg",
   Callback=function(bool)
       getgenv().settings["egg"]=bool
       if bool and selectedEgg then
       buyEgg(tostring(selectedEgg))
       end
   end
})
Other:AddButton({
    Name="Redeem all codes",
    Callback=function()
        codes()
        end
})
Other:AddSlider({
    Name="Walkspeed",
    Value=16,
    Min=16,
    Max=1000,
    Callback=function(value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed=value
    end
})
Other:AddSlider({
    Name="Jump power",
    Value=50,
    Min=50,
    Max=1000,
    Callback=function(value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower=value
    end
})
